# Generated by Django 4.2.2 on 2023-11-13 15:00

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import infrastructure.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, max_length=1000)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'attendees',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('nationality', multiselectfield.db.fields.MultiSelectField(choices=[('AW', 'Aruba'), ('AF', 'Afghanistan'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('AD', 'Andorra'), ('AE', 'United Arab Emirates'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AS', 'American Samoa'), ('AQ', 'Antarctica'), ('TF', 'French Southern Territories'), ('AG', 'Antigua and Barbuda'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BI', 'Burundi'), ('BE', 'Belgium'), ('BJ', 'Benin'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BF', 'Burkina Faso'), ('BD', 'Bangladesh'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BS', 'Bahamas'), ('BA', 'Bosnia and Herzegovina'), ('BL', 'Saint Barthélemy'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('BM', 'Bermuda'), ('BO', 'Bolivia, Plurinational State of'), ('BR', 'Brazil'), ('BB', 'Barbados'), ('BN', 'Brunei Darussalam'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('CF', 'Central African Republic'), ('CA', 'Canada'), ('CC', 'Cocos (Keeling) Islands'), ('CH', 'Switzerland'), ('CL', 'Chile'), ('CN', 'China'), ('CI', "Côte d'Ivoire"), ('CM', 'Cameroon'), ('CD', 'Congo, The Democratic Republic of the'), ('CG', 'Congo'), ('CK', 'Cook Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CV', 'Cabo Verde'), ('CR', 'Costa Rica'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CX', 'Christmas Island'), ('KY', 'Cayman Islands'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DE', 'Germany'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DK', 'Denmark'), ('DO', 'Dominican Republic'), ('DZ', 'Algeria'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('ER', 'Eritrea'), ('EH', 'Western Sahara'), ('ES', 'Spain'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FR', 'France'), ('FO', 'Faroe Islands'), ('FM', 'Micronesia, Federated States of'), ('GA', 'Gabon'), ('GB', 'United Kingdom'), ('GE', 'Georgia'), ('GG', 'Guernsey'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GM', 'Gambia'), ('GW', 'Guinea-Bissau'), ('GQ', 'Equatorial Guinea'), ('GR', 'Greece'), ('GD', 'Grenada'), ('GL', 'Greenland'), ('GT', 'Guatemala'), ('GF', 'French Guiana'), ('GU', 'Guam'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IM', 'Isle of Man'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IE', 'Ireland'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IS', 'Iceland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KH', 'Cambodia'), ('KI', 'Kiribati'), ('KN', 'Saint Kitts and Nevis'), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('LA', "Lao People's Democratic Republic"), ('LB', 'Lebanon'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('MO', 'Macao'), ('MF', 'Saint Martin (French part)'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova, Republic of'), ('MG', 'Madagascar'), ('MV', 'Maldives'), ('MX', 'Mexico'), ('MH', 'Marshall Islands'), ('MK', 'North Macedonia'), ('ML', 'Mali'), ('MT', 'Malta'), ('MM', 'Myanmar'), ('ME', 'Montenegro'), ('MN', 'Mongolia'), ('MP', 'Northern Mariana Islands'), ('MZ', 'Mozambique'), ('MR', 'Mauritania'), ('MS', 'Montserrat'), ('MQ', 'Martinique'), ('MU', 'Mauritius'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('YT', 'Mayotte'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NU', 'Niue'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NZ', 'New Zealand'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PA', 'Panama'), ('PN', 'Pitcairn'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PW', 'Palau'), ('PG', 'Papua New Guinea'), ('PL', 'Poland'), ('PR', 'Puerto Rico'), ('KP', "Korea, Democratic People's Republic of"), ('PT', 'Portugal'), ('PY', 'Paraguay'), ('PS', 'Palestine, State of'), ('PF', 'French Polynesia'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('SD', 'Sudan'), ('SN', 'Senegal'), ('SG', 'Singapore'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('SJ', 'Svalbard and Jan Mayen'), ('SB', 'Solomon Islands'), ('SL', 'Sierra Leone'), ('SV', 'El Salvador'), ('SM', 'San Marino'), ('SO', 'Somalia'), ('PM', 'Saint Pierre and Miquelon'), ('RS', 'Serbia'), ('SS', 'South Sudan'), ('ST', 'Sao Tome and Principe'), ('SR', 'Suriname'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SE', 'Sweden'), ('SZ', 'Eswatini'), ('SX', 'Sint Maarten (Dutch part)'), ('SC', 'Seychelles'), ('SY', 'Syrian Arab Republic'), ('TC', 'Turks and Caicos Islands'), ('TD', 'Chad'), ('TG', 'Togo'), ('TH', 'Thailand'), ('TJ', 'Tajikistan'), ('TK', 'Tokelau'), ('TM', 'Turkmenistan'), ('TL', 'Timor-Leste'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TV', 'Tuvalu'), ('TW', 'Taiwan, Province of China'), ('TZ', 'Tanzania, United Republic of'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('US', 'United States'), ('UZ', 'Uzbekistan'), ('VA', 'Holy See (Vatican City State)'), ('VC', 'Saint Vincent and the Grenadines'), ('VE', 'Venezuela, Bolivarian Republic of'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('VN', 'Viet Nam'), ('VU', 'Vanuatu'), ('WF', 'Wallis and Futuna'), ('WS', 'Samoa'), ('YE', 'Yemen'), ('ZA', 'South Africa'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=8)),
                ('current_country', multiselectfield.db.fields.MultiSelectField(choices=[('AW', 'Aruba'), ('AF', 'Afghanistan'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('AD', 'Andorra'), ('AE', 'United Arab Emirates'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AS', 'American Samoa'), ('AQ', 'Antarctica'), ('TF', 'French Southern Territories'), ('AG', 'Antigua and Barbuda'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BI', 'Burundi'), ('BE', 'Belgium'), ('BJ', 'Benin'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BF', 'Burkina Faso'), ('BD', 'Bangladesh'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BS', 'Bahamas'), ('BA', 'Bosnia and Herzegovina'), ('BL', 'Saint Barthélemy'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('BM', 'Bermuda'), ('BO', 'Bolivia, Plurinational State of'), ('BR', 'Brazil'), ('BB', 'Barbados'), ('BN', 'Brunei Darussalam'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('CF', 'Central African Republic'), ('CA', 'Canada'), ('CC', 'Cocos (Keeling) Islands'), ('CH', 'Switzerland'), ('CL', 'Chile'), ('CN', 'China'), ('CI', "Côte d'Ivoire"), ('CM', 'Cameroon'), ('CD', 'Congo, The Democratic Republic of the'), ('CG', 'Congo'), ('CK', 'Cook Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CV', 'Cabo Verde'), ('CR', 'Costa Rica'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CX', 'Christmas Island'), ('KY', 'Cayman Islands'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DE', 'Germany'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DK', 'Denmark'), ('DO', 'Dominican Republic'), ('DZ', 'Algeria'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('ER', 'Eritrea'), ('EH', 'Western Sahara'), ('ES', 'Spain'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FR', 'France'), ('FO', 'Faroe Islands'), ('FM', 'Micronesia, Federated States of'), ('GA', 'Gabon'), ('GB', 'United Kingdom'), ('GE', 'Georgia'), ('GG', 'Guernsey'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GM', 'Gambia'), ('GW', 'Guinea-Bissau'), ('GQ', 'Equatorial Guinea'), ('GR', 'Greece'), ('GD', 'Grenada'), ('GL', 'Greenland'), ('GT', 'Guatemala'), ('GF', 'French Guiana'), ('GU', 'Guam'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IM', 'Isle of Man'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IE', 'Ireland'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IS', 'Iceland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KH', 'Cambodia'), ('KI', 'Kiribati'), ('KN', 'Saint Kitts and Nevis'), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('LA', "Lao People's Democratic Republic"), ('LB', 'Lebanon'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('MO', 'Macao'), ('MF', 'Saint Martin (French part)'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova, Republic of'), ('MG', 'Madagascar'), ('MV', 'Maldives'), ('MX', 'Mexico'), ('MH', 'Marshall Islands'), ('MK', 'North Macedonia'), ('ML', 'Mali'), ('MT', 'Malta'), ('MM', 'Myanmar'), ('ME', 'Montenegro'), ('MN', 'Mongolia'), ('MP', 'Northern Mariana Islands'), ('MZ', 'Mozambique'), ('MR', 'Mauritania'), ('MS', 'Montserrat'), ('MQ', 'Martinique'), ('MU', 'Mauritius'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('YT', 'Mayotte'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NU', 'Niue'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NZ', 'New Zealand'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PA', 'Panama'), ('PN', 'Pitcairn'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PW', 'Palau'), ('PG', 'Papua New Guinea'), ('PL', 'Poland'), ('PR', 'Puerto Rico'), ('KP', "Korea, Democratic People's Republic of"), ('PT', 'Portugal'), ('PY', 'Paraguay'), ('PS', 'Palestine, State of'), ('PF', 'French Polynesia'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('SD', 'Sudan'), ('SN', 'Senegal'), ('SG', 'Singapore'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('SJ', 'Svalbard and Jan Mayen'), ('SB', 'Solomon Islands'), ('SL', 'Sierra Leone'), ('SV', 'El Salvador'), ('SM', 'San Marino'), ('SO', 'Somalia'), ('PM', 'Saint Pierre and Miquelon'), ('RS', 'Serbia'), ('SS', 'South Sudan'), ('ST', 'Sao Tome and Principe'), ('SR', 'Suriname'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SE', 'Sweden'), ('SZ', 'Eswatini'), ('SX', 'Sint Maarten (Dutch part)'), ('SC', 'Seychelles'), ('SY', 'Syrian Arab Republic'), ('TC', 'Turks and Caicos Islands'), ('TD', 'Chad'), ('TG', 'Togo'), ('TH', 'Thailand'), ('TJ', 'Tajikistan'), ('TK', 'Tokelau'), ('TM', 'Turkmenistan'), ('TL', 'Timor-Leste'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Turkey'), ('TV', 'Tuvalu'), ('TW', 'Taiwan, Province of China'), ('TZ', 'Tanzania, United Republic of'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('US', 'United States'), ('UZ', 'Uzbekistan'), ('VA', 'Holy See (Vatican City State)'), ('VC', 'Saint Vincent and the Grenadines'), ('VE', 'Venezuela, Bolivarian Republic of'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('VN', 'Viet Nam'), ('VU', 'Vanuatu'), ('WF', 'Wallis and Futuna'), ('WS', 'Samoa'), ('YE', 'Yemen'), ('ZA', 'South Africa'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=8)),
                ('current_city', models.CharField(max_length=100)),
                ('pronouns', models.CharField(max_length=30, null=True)),
                ('age_group', models.CharField(choices=[('A', '17 or younger'), ('B', '18 to 20'), ('C', '21 to 29'), ('D', '30 to 39'), ('E', '40 to 49'), ('F', '50 to 59'), ('G', '60 or older'), ('H', 'I prefer not to say')], default='H', max_length=1)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('event_year', models.IntegerField(default=2024)),
                ('portfolio', models.URLField(null=True)),
                ('secondary_portfolio', models.URLField(null=True)),
                ('gender_identity', multiselectfield.db.fields.MultiSelectField(choices=[('A', 'Cisgender female'), ('B', 'Cisgender male'), ('C', 'Transgender female'), ('D', 'Transgender male'), ('E', 'Gender non-conforming, non-binary, or gender queer'), ('F', 'Two-spirit'), ('G', 'I prefer not to say'), ('O', 'Other')], max_length=8)),
                ('gender_identity_other', models.CharField(max_length=20, null=True)),
                ('race_ethnic_group', multiselectfield.db.fields.MultiSelectField(choices=[('A', 'Asian, Asian American, or of Asian descent'), ('B', 'Black, African American, or of African descent'), ('C', 'Hispanic, Latino, Latina, Latinx, or of Latinx or Spanish-speaking descent'), ('D', 'Middle Eastern, North African, or of North African descent'), ('E', 'Native American, American Indian, Alaska Native, or Indigenous'), ('F', 'Pacific Islander or Native Hawaiian'), ('G', 'White or of European descent'), ('H', 'Multi-racial or multi-ethnic'), ('I', 'I prefer not to say'), ('O', 'Other')], max_length=10)),
                ('race_ethnic_group_other', models.CharField(max_length=20, null=True)),
                ('disability_identity', models.CharField(choices=[('A', 'Yes'), ('B', 'No'), ('C', 'I prefer not to say')], default='C', max_length=1)),
                ('disabilities', multiselectfield.db.fields.MultiSelectField(choices=[('A', 'Hearing difficulty - Deaf or having serious difficulty hearing (DEAR).'), ('B', 'Vision difficulty - Blind or having serious difficulty seeing, even when wearing glasses (DEYE).'), ('C', 'Cognitive difficulty - Because of a physical, mental, or emotional problem, having difficulty remembering, concentrating, or making decisions (DREM).'), ('D', 'Ambulatory difficulty - Having serious difficulty walking or climbing stairs (DPHY).'), ('E', 'Self-care difficulty - Having difficulty bathing or dressing (DDRS).'), ('F', "Independent living difficulty - Because of a physical, mental, or emotional problem, having difficulty doing errands alone such as visiting a doctor's office or shopping (DOUT)."), ('G', 'I prefer not to say'), ('O', 'Other')], max_length=7, null=True)),
                ('disabilities_other', models.CharField(max_length=20, null=True)),
                ('disability_accommodations', models.TextField(blank=True, max_length=1000, null=True)),
                ('participation_capacity', models.CharField(choices=[('S', 'Student'), ('P', 'Professional'), ('H', 'Hobbyist')], default='H', max_length=1)),
                ('student_school', models.CharField(max_length=100, null=True)),
                ('student_field_of_study', models.CharField(max_length=100, null=True)),
                ('occupation', models.CharField(max_length=100, null=True)),
                ('employer', models.CharField(max_length=100, null=True)),
                ('industry', multiselectfield.db.fields.MultiSelectField(choices=[('Industry', 'Industry'), ('Accounting ', 'Accounting '), ('Airlines/Aviation', 'Airlines/Aviation'), ('Alternative Dispute Resolution', 'Alternative Dispute Resolution'), ('Alternative Medicine', 'Alternative Medicine'), ('Animation', 'Animation'), ('Apparel/Fashion', 'Apparel/Fashion'), ('Architecture/Planning', 'Architecture/Planning'), ('Arts/Crafts', 'Arts/Crafts'), ('Automotive', 'Automotive'), ('Aviation/Aerospace', 'Aviation/Aerospace'), ('Banking/Mortgage', 'Banking/Mortgage'), ('Biotechnology/Greentech', 'Biotechnology/Greentech'), ('Broadcast Media', 'Broadcast Media'), ('Building Materials', 'Building Materials'), ('Business Supplies/Equipment', 'Business Supplies/Equipment'), ('Capital Markets/Hedge Fund/Private Equity', 'Capital Markets/Hedge Fund/Private Equity'), ('Chemicals', 'Chemicals'), ('Civic/Social Organization', 'Civic/Social Organization'), ('Civil Engineering', 'Civil Engineering'), ('Commercial Real Estate', 'Commercial Real Estate'), ('Computer Games', 'Computer Games'), ('Computer Hardware', 'Computer Hardware'), ('Computer Networking', 'Computer Networking'), ('Computer Software/Engineering', 'Computer Software/Engineering'), ('Computer/Network Security', 'Computer/Network Security'), ('Construction', 'Construction'), ('Consumer Electronics', 'Consumer Electronics'), ('Consumer Goods', 'Consumer Goods'), ('Consumer Services', 'Consumer Services'), ('Cosmetics', 'Cosmetics'), ('Dairy', 'Dairy'), ('Defense/Space', 'Defense/Space'), ('Design', 'Design'), ('E-Learning', 'E-Learning'), ('Education Management', 'Education Management'), ('Electrical/Electronic Manufacturing', 'Electrical/Electronic Manufacturing'), ('Entertainment/Movie Production', 'Entertainment/Movie Production'), ('Environmental Services', 'Environmental Services'), ('Events Services', 'Events Services'), ('Executive Office', 'Executive Office'), ('Facilities Services', 'Facilities Services'), ('Farming', 'Farming'), ('Financial Services', 'Financial Services'), ('Fine Art', 'Fine Art'), ('Fishery', 'Fishery'), ('Food Production', 'Food Production'), ('Food/Beverages', 'Food/Beverages'), ('Fundraising', 'Fundraising'), ('Furniture', 'Furniture'), ('Gambling/Casinos', 'Gambling/Casinos'), ('Glass/Ceramics/Concrete', 'Glass/Ceramics/Concrete'), ('Government Administration', 'Government Administration'), ('Government Relations', 'Government Relations'), ('Graphic Design/Web Design', 'Graphic Design/Web Design'), ('Health/Fitness', 'Health/Fitness'), ('Higher Education/Acadamia', 'Higher Education/Acadamia'), ('Hospital/Health Care', 'Hospital/Health Care'), ('Hospitality', 'Hospitality'), ('Human Resources/HR', 'Human Resources/HR'), ('Import/Export', 'Import/Export'), ('Individual/Family Services', 'Individual/Family Services'), ('Industrial Automation', 'Industrial Automation'), ('Information Services', 'Information Services'), ('Information Technology/IT', 'Information Technology/IT'), ('Insurance', 'Insurance'), ('International Affairs', 'International Affairs'), ('International Trade/Development', 'International Trade/Development'), ('Internet', 'Internet'), ('Investment Banking/Venture', 'Investment Banking/Venture'), ('Investment Management/Hedge Fund/Private Equity', 'Investment Management/Hedge Fund/Private Equity'), ('Judiciary', 'Judiciary'), ('Law Enforcement', 'Law Enforcement'), ('Law Practice/Law Firms', 'Law Practice/Law Firms'), ('Legal Services', 'Legal Services'), ('Legislative Office', 'Legislative Office'), ('Leisure/Travel', 'Leisure/Travel'), ('Library', 'Library'), ('Logistics/Procurement', 'Logistics/Procurement'), ('Luxury Goods/Jewelry', 'Luxury Goods/Jewelry'), ('Machinery', 'Machinery'), ('Management Consulting', 'Management Consulting'), ('Maritime', 'Maritime'), ('Market Research', 'Market Research'), ('Marketing/Advertising/Sales', 'Marketing/Advertising/Sales'), ('Mechanical or Industrial Engineering', 'Mechanical or Industrial Engineering'), ('Media Production', 'Media Production'), ('Medical Equipment', 'Medical Equipment'), ('Medical Practice', 'Medical Practice'), ('Mental Health Care', 'Mental Health Care'), ('Military Industry', 'Military Industry'), ('Mining/Metals', 'Mining/Metals'), ('Motion Pictures/Film', 'Motion Pictures/Film'), ('Museums/Institutions', 'Museums/Institutions'), ('Music', 'Music'), ('Nanotechnology', 'Nanotechnology'), ('Newspapers/Journalism', 'Newspapers/Journalism'), ('Non-Profit/Volunteering', 'Non-Profit/Volunteering'), ('Oil/Energy/Solar/Greentech', 'Oil/Energy/Solar/Greentech'), ('Online Publishing', 'Online Publishing'), ('Outsourcing/Offshoring', 'Outsourcing/Offshoring'), ('Package/Freight Delivery', 'Package/Freight Delivery'), ('Packaging/Containers', 'Packaging/Containers'), ('Paper/Forest Products', 'Paper/Forest Products'), ('Performing Arts', 'Performing Arts'), ('Pharmaceuticals', 'Pharmaceuticals'), ('Philanthropy', 'Philanthropy'), ('Photography', 'Photography'), ('Plastics', 'Plastics'), ('Political Organization', 'Political Organization'), ('Primary/Secondary Education', 'Primary/Secondary Education'), ('Printing', 'Printing'), ('Professional Training', 'Professional Training'), ('Program Development', 'Program Development'), ('Public Relations/PR', 'Public Relations/PR'), ('Public Safety', 'Public Safety'), ('Publishing Industry', 'Publishing Industry'), ('Railroad Manufacture', 'Railroad Manufacture'), ('Ranching', 'Ranching'), ('Real Estate/Mortgage', 'Real Estate/Mortgage'), ('Recreational Facilities/Services', 'Recreational Facilities/Services'), ('Religious Institutions', 'Religious Institutions'), ('Renewables/Environment', 'Renewables/Environment'), ('Research Industry', 'Research Industry'), ('Restaurants', 'Restaurants'), ('Retail Industry', 'Retail Industry'), ('Security/Investigations', 'Security/Investigations'), ('Semiconductors', 'Semiconductors'), ('Shipbuilding', 'Shipbuilding'), ('Sporting Goods', 'Sporting Goods'), ('Sports', 'Sports'), ('Staffing/Recruiting', 'Staffing/Recruiting'), ('Supermarkets', 'Supermarkets'), ('Telecommunications', 'Telecommunications'), ('Textiles', 'Textiles'), ('Think Tanks', 'Think Tanks'), ('Tobacco', 'Tobacco'), ('Translation/Localization', 'Translation/Localization'), ('Transportation', 'Transportation'), ('Utilities', 'Utilities'), ('Venture Capital/VC', 'Venture Capital/VC'), ('Veterinary', 'Veterinary'), ('Warehousing', 'Warehousing'), ('Wholesale', 'Wholesale'), ('Wine/Spirits', 'Wine/Spirits'), ('Wireless', 'Wireless'), ('Writing/Editing', 'Writing/Editing'), ('Other', 'Other')], max_length=100, null=True)),
                ('industry_other', models.CharField(max_length=20, null=True)),
                ('specialized_expertise', models.TextField(max_length=1000, null=True)),
                ('status', models.CharField(choices=[('AI', 'Accepted, In-Person'), ('AO', 'Accepted, Online'), ('WI', 'Wait-list, In-Person'), ('WO', 'Wait-list, Online'), ('D', 'Declined')], default=None, max_length=2, null=True)),
                ('previously_participated', models.BooleanField(default=False)),
                ('previous_participation', multiselectfield.db.fields.MultiSelectField(choices=[('A', '2016'), ('B', '2017'), ('C', '2018'), ('D', '2019'), ('E', '2020'), ('F', '2022'), ('G', '2023')], max_length=7, null=True)),
                ('participation_role', models.CharField(choices=[('A', 'Digital Designer'), ('D', 'Developer'), ('S', 'Domain or other Specialized Skill Expert'), ('P', 'Project Manager')], default='S', max_length=1)),
                ('experience_with_xr', models.TextField(blank=True, max_length=1000, null=True)),
                ('theme_essay', models.TextField(blank=True, max_length=1000, null=True)),
                ('theme_essay_follow_up', models.TextField(blank=True, max_length=1000, null=True)),
                ('hardware_hack_interest', models.CharField(choices=[('A', "Not at all interested; I'll pass"), ('B', 'Some mild interest'), ('C', 'Most likely'), ('D', '100%; I want to join')], default='B', max_length=1)),
                ('heard_about_us', multiselectfield.db.fields.MultiSelectField(choices=[('F', 'A friend'), ('V', 'A Reality Hack organizer or volunteer'), ('N', 'A teacher or someone in my professional network'), ('S', 'Social media'), ('C', 'Campus poster or ad'), ('P', 'I participated in the MIT XR Hackathon before'), ('O', 'Other')], max_length=30)),
                ('heard_about_us_other', models.CharField(max_length=20, null=True)),
                ('digital_designer_skills', multiselectfield.db.fields.MultiSelectField(choices=[('A', 'Digital Art'), ('B', 'Animation'), ('C', 'Sound'), ('D', 'UX and UI'), ('E', 'Video'), ('F', 'Other')], max_length=30, null=True)),
                ('digital_designer_skills_other', models.CharField(max_length=20, null=True)),
                ('communications_platform_username', models.CharField(max_length=40, null=True)),
                ('outreach_groups', models.TextField(blank=True, max_length=1000, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('image', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('building', models.CharField(choices=[], max_length=2)),
                ('room', models.CharField(choices=[('MH', 'Main Hall'), ('AT', 'Atlantis')], default='MH', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.PositiveBigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='infrastructure.location')),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=infrastructure.models.user_directory_path)),
                ('claimed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'uploaded files',
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('datetime', models.DateTimeField(null=True)),
                ('duration', models.IntegerField(null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('course_materials', models.URLField(blank=True, null=True)),
                ('recommended_for', multiselectfield.db.fields.MultiSelectField(choices=[('A', 'Digital Designer'), ('D', 'Developer'), ('S', 'Domain or other Specialized Skill Expert'), ('P', 'Project Manager')], max_length=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hardware', models.ManyToManyField(related_name='workshop_hardware', to='infrastructure.hardware')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workshop_location', to='infrastructure.location')),
                ('skills', models.ManyToManyField(related_name='workshop_skills', to='infrastructure.skill')),
            ],
        ),
        migrations.CreateModel(
            name='WorkshopAttendee',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('participation', models.CharField(choices=[('R', "RSVP'd"), ('C', 'Confirmed'), ('I', 'Instructor'), ('V', 'Volunteer')], default='R', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_attendee_attendee', to=settings.AUTH_USER_MODEL)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_attendee_workshop', to='infrastructure.workshop')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attendees', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('table', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='infrastructure.table')),
            ],
        ),
        migrations.CreateModel(
            name='SkillProficiency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('proficiency', models.CharField(choices=[('N', 'Novice'), ('C', 'Competent'), ('P', 'Proficient'), ('M', 'Master')], default='N', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.application')),
                ('attendee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.skill')),
            ],
            options={
                'verbose_name': 'skill proficiencies',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('repository_location', models.URLField()),
                ('submission_location', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='infrastructure.team')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalHardwareDevice',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('serial', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('checked_out_to', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('hardware', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='infrastructure.hardware')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical hardware device',
                'verbose_name_plural': 'historical hardware devices',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HelpDesk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.GenericIPAddressField()),
                ('announcement_pending', models.BooleanField(default=False)),
                ('mentor_requested', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('table', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.table')),
            ],
        ),
        migrations.CreateModel(
            name='HardwareDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('serial', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checked_out_to', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('hardware', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.hardware')),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='resume',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='application_resume_uploaded_file', to='infrastructure.uploadedfile'),
        ),
        migrations.AddField(
            model_name='attendee',
            name='application',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.application'),
        ),
        migrations.AddField(
            model_name='attendee',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='attendee',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['name'], name='infrastruct_name_661d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['table'], name='infrastruct_table_i_c8f6ee_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='skillproficiency',
            unique_together={('attendee', 'skill')},
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['last_name', 'first_name'], name='infrastruct_last_na_029e47_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['first_name'], name='infrastruct_first_n_5c1abd_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['last_name'], name='infrastruct_last_na_46c1a5_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['username'], name='infrastruct_usernam_0bcdcc_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['email'], name='infrastruct_email_a899f3_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['is_staff'], name='infrastruct_is_staf_9a7229_idx'),
        ),
        migrations.AddIndex(
            model_name='attendee',
            index=models.Index(fields=['metadata'], name='infrastruct_metadat_bc35e8_idx'),
        ),
    ]
